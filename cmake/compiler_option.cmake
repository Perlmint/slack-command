CMAKE_MINIMUM_REQUIRED( VERSION 2.8.8 FATAL_ERROR )

INCLUDE( CMakeParseArguments )
INCLUDE( cmake_lib_utils )

FUNCTION( SET_CPP_STD )
  IF( POLICY CMP0054 )
    CMAKE_POLICY(SET CMP0054 NEW)
  ENDIF(  )
  SET( OPTIONS  )
  SET( ONE_VALUE_ARG MODE VERSION )
  SET( MULTI_VALUE_ARGS )
  CMAKE_PARSE_ARGUMENTS( _CPP_STD "${OPTIONS}" "${ONE_VALUE_ARG}" "${MULTI_VALUE_ARGS}" ${ARGN} )
  SET( _CPP_STD_TARGET ${_CPP_STD_UNPARSED_ARGUMENTS} )

  IF( CMAKE_CXX_COMPILER_ID STREQUAL "MSVC" )
    # ref: http://msdn.microsoft.com/en-us/library/hh567368.aspx#corelanguagetable
    IF( _CPP_STD_VERSION STREQUAL 11 )
      IF( MSVC_VERSION LESS 1700 )
        MESSAGE( SEND_ERROR "Visual Studio version is too low to use C++11 standard" )
      ENDIF(  )
    ELSEIF( _CPP_STD_VERSION STREQUAL 14 OR _CPP_STD_VERSION STREQUAL 17 )
      IF( MSVC_VERSION LESS 1900 )
        MESSAGE( SEND_ERROR "Visual Studio version is too low to use C++14/C++17 standard" )
      ENDIF(  )
    ENDIF(  )
  ELSEIF( CMAKE_CXX_COMPILER_ID STREQUAL "Clang" )
    # ref: http://clang.llvm.org/cxx_status.html
    IF( _CPP_STD_VERSION STREQUAL 11 )
      IF( CMAKE_CXX_COMPILER_VERSION VERSION_LESS 2.9.0 )
        MESSAGE( SEND_ERROR "Clang version is too low to use C++11 standard features : Clang(${CMAKE_CXX_COMPILER_VERSION})" )
      ENDIF(  )
      SET( STD_CODE "c++11" )
    ELSEIF( _CPP_STD_VERSION STREQUAL 14 )
      IF( CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.4.0 )
        MESSAGE( SEND_ERROR "Clang version is too low to use C++14 standard features : Clang(${CMAKE_CXX_COMPILER_VERSION})" )
      ENDIF(  )
      SET( STD_CODE "c++1y" )
    ELSEIF( _CPP_STD_VERSION STREQUAL 17 )
      IF( CMAKE_CXX_COMPILER_VERSION VERSION_LESS 3.5.0 )
        MESSAGE( SEND_ERROR "Clang version is too low to use C++17 standard features : Clang(${CMAKE_CXX_COMPILER_VERSION})" )
      ENDIF(  )
      SET( STD_CODE "c++1z" )
    ENDIF()

    IF( APPLE )
      IF( _CPP_STD_MODE STREQUAL "TARGET" )
        IF( XCODE_VERSION )
          SET_XCODE_PROPERTY( ${_CPP_STD_TARGET} CLANG_CXX_LANGUAGE_STANDARD ${STD_CODE} )
          SET_XCODE_PROPERTY( ${_CPP_STD_TARGET} CLANG_CXX_LIBRARY "libc++" )
        ENDIF(  )
        SET_PROPERTY( ${_CPP_STD_MODE} ${_CPP_STD_TARGET} APPEND_STRING PROPERTY LINK_FLAGS " -stdlib=libc++" )
      ENDIF(  )
      SET_PROPERTY( ${_CPP_STD_MODE} ${_CPP_STD_TARGET} APPEND_STRING PROPERTY COMPILE_FLAGS " -std=${STD_CODE} -stdlib=libc++" )
    ELSE(  )
      SET_PROPERTY( ${_CPP_STD_MODE} ${_CPP_STD_TARGET} APPEND_STRING PROPERTY COMPILE_FLAGS " -std=${STD_CODE}" )
    ENDIF(  )
  ELSEIF( CMAKE_CXX_COMPILER_ID STREQUAL "GNU" )
    # ref: https://gcc.gnu.org/projects/cxx0x.html
    IF( _CPP_STD_VERSION STREQUAL 11 )
      IF( CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.3.0 )
        MESSAGE( SEND_ERROR "GCC version is too low to use C++11 standard features : GCC(${CMAKE_CXX_COMPILER_VERSION})" )
      ELSEIF( CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 4.7 )
        SET( STD_CODE "c++11" )
      ELSE(  )
        SET( STD_CODE "c++0x" )
      ENDIF(  )
    ELSEIF( _CPP_STD_VERSION STREQUAL 14 )
      IF( CMAKE_CXX_COMPILER_VERSION VERSION_LESS 4.9.0 )
        MESSAGE( SEND_ERROR "GCC version is too low to use C++14 standard features : Clang(${CMAKE_CXX_COMPILER_VERSION})" )
      ENDIF(  )
      SET( STD_CODE "c++14" )
    ELSEIF( _CPP_STD_VERSION STREQUAL 17 )
      IF( CMAKE_CXX_COMPILER_VERSION VERSION_LESS 5.1.0 )
        MESSAGE( SEND_ERROR "GCC version is too low to use C++17 standard features : Clang(${CMAKE_CXX_COMPILER_VERSION})" )
      ENDIF(  )
      SET( STD_CODE "c++1z" )
    ENDIF()

    SET_PROPERTY( ${_CPP_STD_MODE} ${_CPP_STD_TARGET} APPEND_STRING PROPERTY COMPILE_FLAGS " -std=${STD_CODE}" )
  ENDIF(  )
ENDFUNCTION( SET_CPP_STD )
